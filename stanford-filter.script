//
// Stanford Research IT MIRC-CTP filtering script
// This script allows specific known pixel PHI, so always use the included pixel scrubbing script.
// 

//
// This group contains very specific whitelisted devices. They may or may not have scrubbing rules.
// If a wanted device gets filtered out, they need to be added here 
//
(
  // KONICA 0402 CR -- SCRUBBED
  (Manufacturer.containsIgnoreCase("KONICA") * Modality.startsWithIgnoreCase("CR")
   *ManufacturerModelName.containsIgnoreCase("0402") 
   *(
     ([0018,1020].startsWithIgnoreCase("6.") * Rows.equalsIgnoreCase("2446") * Columns.equalsIgnoreCase("2446"))
    +([0018,1020].startsWithIgnoreCase("2.") * Rows.equalsIgnoreCase("2010") * Columns.equalsIgnoreCase("2446"))
   )
  )

  // MedicaTechUSA KrstyalRad 660 -- SCRUBBED
  +(Manufacturer.containsIgnoreCase("Medicatechusa") * (Modality.startsWithIgnoreCase("CR") + Modality.startsWithIgnoreCase("DX")) 
    *ManufacturerModelName.startsWithIgnoreCase("KrystalRad 660") 
    *[0018,1020].startsWithIgnoreCase("1.")
  )

  // CANON/SHIMADZU AXIOM / CXDI V4/6 -- SCRUBBED
  +((Manufacturer.containsIgnoreCase("Shimadzu") + Manufacturer.containsIgnoreCase("Canon")) * (Modality.startsWithIgnoreCase("CR") + Modality.startsWithIgnoreCase("DX")) 
   *(
    (ManufacturerModelName.startsWithIgnoreCase("AXIOM") + ManufacturerModelName.startsWithIgnoreCase("CXDI")) 
    *([0018,1020].startsWithIgnoreCase("V6") + [0018,1020].startsWithIgnoreCase("V4") + [0018,1020].startsWithIgnoreCase("2."))
   )  
  )

  // Cuattro CloudDR -- SCRUBBED
  +(Manufacturer.startsWithIgnoreCase("Cuattro") * Modality.startsWithIgnoreCase("DX") 
   *ManufacturerModelName.startsWithIgnoreCase("CloudDR") 
   *[0018,1020].startsWithIgnoreCase("3.")  
   *Rows.equalsIgnoreCase("3072") * Columns.equalsIgnoreCase("3072")
  )

  // Medlink Imaging AltoDR -- SCRUBBED
  +(Manufacturer.startsWithIgnoreCase("Medlink Imaging") * Modality.startsWithIgnoreCase("DX")
   *ManufacturerModelName.startsWithIgnoreCase("AltoDR") 
   *[0018,1020].startsWithIgnoreCase("1.") 
   *Rows.equalsIgnoreCase("2922") * Columns.equalsIgnoreCase("1936")
  )


  // GE CT+PET -- SCRUBBED
  +((Manufacturer.startsWithIgnoreCase("GE MEDICAL") + Manufacturer.startsWithIgnoreCase("GEMS")) * (Modality.equalsIgnoreCase("PT") + Modality.equals("OT") + Modality.equals("CT"))
   *(ManufacturerModelName.startsWithIgnoreCase("Discovery") 
     *[0018,1018].startsWithIgnoreCase("Volume Viewer")
     *([0018,1020].startsWithIgnoreCase("5") + [0018,1020].startsWithIgnoreCase("4"))
     *(
       (Rows.containsIgnoreCase("512") * Columns.containsIgnoreCase("512")) 
      +(Rows.containsIgnoreCase("512") * Columns.containsIgnoreCase("256"))
     )
   )
  )
 
  // MIMvista standalone -- No scrubbing needed
  +((Manufacturer.equalsIgnoreCase("MIMvista Corp") * Modality.equals("CT"))
    *[0018,1020].equalsIgnoreCase("")
    *Rows.equalsIgnoreCase("512") 
    *Columns.equalsIgnoreCase("512")
  )

  // MIMvista + Manufacturer -- No scrubbing needed
  +((Manufacturer.containsIgnoreCase("/ MIM") * (Modality.equals("CT") + Modality.equals("PT")))
   *ImageType.contains("DERIVED\PRIMARY")
   *[0018,1020].equalsIgnoreCase("")
  )

  // Siemens Biograph 6, Somaris/5 3D, SOMATOM Definition AS -- No scrubbing needed but be careful of dose
  +(Manufacturer.startsWithIgnoreCase("SIEMENS") * (Modality.equalsIgnoreCase("CT") + Modality.equals("PT"))
   *(!ImageType.contains("PROT"))
   *(
     (ManufacturerModelName.containsIgnoreCase("Biograph 6") * [0018,1020].containsIgnoreCase("syngo CT 2006"))
    +(ManufacturerModelName.containsIgnoreCase("Somaris/5 3D") * [0018,1020].containsIgnoreCase("VA45A-W")) 
    +(ManufacturerModelName.containsIgnoreCase("SOMATOM Definition AS") * [0018,1020].containsIgnoreCase("syngo MI.PET/CT 2012"))
    +(SecondaryCaptureDeviceManufacturerModelName.containsIgnoreCase("SOMATOM Definition AS") * DerivationDescription.equals("MEDCOM RESAMPLED"))
    +(ManufacturerModelName.startsWithIgnoreCase("Emotion"))
    +(ManufacturerModelName.containsIgnoreCase("Sensation"))
   )
  )
  
  // Philips PT/CT fusion
  +(Manufacturer.startsWithIgnoreCase("Philips") * Modality.equals("PT") * 
    ManufacturerModelName.startsWithIgnoreCase("Guardian") *
    [0018,1018].startsWithIgnoreCase("EBW") *
    [0018,1020].startsWithIgnoreCase("9.3.1") *
    (
      (Rows.equals("839") * Columns.equals("638"))
      +(Rows.equals("918") * Columns.equals("453"))
      +(Rows.equals("918") * Columns.equals("546"))
      +(Rows.equals("907") * Columns.equals("638"))
    )
  )

  // Segami Mirage (WB MAC P600) -- NM
  +(Manufacturer.equalsIgnoreCase("Segami") 
    *Modality.equals("NM")
    *ManufacturerModelName.equalsIgnoreCase("Mirage")
    *( 
      (Rows.equals("192") * Columns.equals("192"))
     +(Rows.equals("512") * Columns.equals("512"))
    ) 
  )
  
  // Ceretom dose reports do NOT contain PHI pixels and should be anonymized
  +(Manufacturer.equalsIgnoreCase("Neurologica") 
    *Modality.equals("CT")
    *ManufacturerModelName.equalsIgnoreCase("CereTom")
    *Rows.equals("512") * Columns.equals("512")
    *ImageType.equals("ORIGINAL\PRIMARY\DOSE")
  )  
  
  // Mammography
  
  // Almost all mammo manufacturers need their own whitelist since the many are DERIVED\PRIMARY
  +(Modality.equals("MG")
    *(
      (Manufacturer.equalsIgnoreCase("CARESTREAM") * ManufacturerModelName.equalsIgnoreCase("CLASSIC CR"))
     +(Manufacturer.containsIgnoreCase("Hologic") * ManufacturerModelName.containsIgnoreCase("Selenia"))
     +(Manufacturer.containsIgnoreCase("Lorad") * ManufacturerModelName.containsIgnoreCase("Selenia"))
     +(Manufacturer.containsIgnoreCase("Lorad") * ManufacturerModelName.containsIgnoreCase("DSM"))
     +(Manufacturer.startsWith("GE") * ManufacturerModelName.containsIgnoreCase("Senographe"))
     +(Manufacturer.startsWith("GE") * ManufacturerModelName.containsIgnoreCase("ADS_"))
     +(Manufacturer.containsIgnoreCase("MPTronic") * ManufacturerModelName.containsIgnoreCase("Senographe"))
     +(Manufacturer.containsIgnoreCase("FUJI") * ManufacturerModelName.containsIgnoreCase("Clearview CSm"))
     +(Manufacturer.containsIgnoreCase("FUJI") * ManufacturerModelName.containsIgnoreCase("FDR"))
     +(Manufacturer.containsIgnoreCase("Fischer") * ManufacturerModelName.containsIgnoreCase("SenoScan"))
     +(Manufacturer.containsIgnoreCase("IMS") * ManufacturerModelName.containsIgnoreCase("GIOTTO"))
     +(Manufacturer.containsIgnoreCase("KODAK") * ManufacturerModelName.equalsIgnoreCase("ELITE CR"))
     +(Manufacturer.containsIgnoreCase("KODAK") * ManufacturerModelName.equalsIgnoreCase("CLASSIC CR"))
     +(Manufacturer.containsIgnoreCase("Philips") * ManufacturerModelName.equals("L30"))
     +(Manufacturer.containsIgnoreCase("SIEMENS") * ManufacturerModelName.containsIgnoreCase("Mammomat"))
     +(Manufacturer.containsIgnoreCase("TMSC") * ManufacturerModelName.equalsIgnoreCase("MGU-1000D"))
    )
    *!(
     // For mammo we can't just filter on DERIVED. So we avoid SECONDARY except for a few manufacturers.
     (ImageType.containsIgnoreCase("SECONDARY")
      *!(
         (Manufacturer.containsIgnoreCase("Hologic") * ManufacturerModelName.containsIgnoreCase("Selenia"))
         +(Manufacturer.containsIgnoreCase("Lorad") * ManufacturerModelName.containsIgnoreCase("Selenia"))
         +(Manufacturer.containsIgnoreCase("TMSC") * ManufacturerModelName.equalsIgnoreCase("MGU-1000D"))
      )
     )
     +ImageType.containsIgnoreCase("SCREEN")
     +ImageType.equals("")
     +BurnedInAnnotation.equalsIgnoreCase("YES")
    )
  )

  // BREAST MRI
  +(Modality.equals("MR")
    *(
     (Manufacturer.equalsIgnoreCase("GE MEDICAL SYSTEMS") * ManufacturerModelName.containsIgnoreCase("DISCOVERY"))
     *ImageType.contains("DERIVED\PRIMARY\DIXON\WATER")
    )
  )
  
  // Ultrasound 
  +(Modality.contains("US")
   *(
     (Manufacturer.equalsIgnoreCase("ACUSON") * ManufacturerModelName.containsIgnoreCase("SEQUOIA")
      *!ImageType.equals("ORIGINAL\PRIMARY\\0000")
      *(
        (Rows.equals("480") * Columns.equals("640"))
       +(Rows.equals("456") * Columns.equals("576"))
      )
     )
     
     +(Manufacturer.containsIgnoreCase("ALOKA") * ManufacturerModelName.equalsIgnoreCase("SSD-ALPHA5")
      *!ImageType.equals("ORIGINAL\PRIMARY\\0000")
      *Rows.equals("480") * Columns.equals("640")
     )

     +(Manufacturer.containsIgnoreCase("ATL") * (ManufacturerModelName.equalsIgnoreCase("HDI 5000")+ManufacturerModelName.equalsIgnoreCase("HDI 3000"))
      *!InstanceNumber.equals("0") // Demographics screen not detectable via DICOM tags 
      *Rows.equals("476") * Columns.equals("640")
     )

     //////////////////
     // GE
     //
     +((Manufacturer.startsWith("GE")+Manufacturer.startsWith("G.E."))
      // SOP Class whitelists for all GE models
      *(SOPClassUID.startsWith("1.2.840.10008.5.1.4.1.1.6") 
       +SOPClassUID.startsWith("1.2.840.10008.5.1.4.1.1.3")
       // +SOPClassUID.startsWith("1.2.840.10008.5.1.4.1.1.7") -- Not until we have OCR
      )

      // Screenshots have been found in this ImageType with SOPClassUID 1.2.840.10008.5.1.4.1.1.6
      // For Model LOGIQE9 with SoftwareVersions LOGIQS8:R3.1.6, LOGIQe:LOGIQ e R9.0.3
      // We skip for all GE models though just in case
      *(!(ImageType.equals("DERIVED\PRIMARY\\0000") * SOPClassUID.startsWith("1.2.840.10008.5.1.4.1.1.6")))
     
      *(

       // INVENIA
       (ManufacturerModelName.equals("Invenia")
        // No scrubbing needed?!
        // Versions 1.1.0, 1.1.3
        *Rows.equals("482") * Columns.equals("841")
       )

       // Vivide 
       +(ManufacturerModelName.equals("Vivide")
        *Rows.equals("614") * Columns.equals("820")
       )

       // Vivid i 
       +(ManufacturerModelName.equals("Vivid i")
        *((Rows.equals("422") * Columns.equals("636"))
         +(Rows.equals("434") * Columns.equals("636"))
        )
       )

       // Vivid S5 
       +(ManufacturerModelName.equals("Vivid S5")
        *((Rows.equals("422") * Columns.equals("636"))
        )
       )

       // Vivid S6 
       +(ManufacturerModelName.equals("Vivid S6")
        *((Rows.equals("422") * Columns.equals("636"))
         +(Rows.equals("434") * Columns.equals("636"))
        )
       )

       // Vivid 7
       +(ManufacturerModelName.equals("Vivid7")
        *((Rows.equals("434") * Columns.equals("636"))
         +(Rows.equals("434") * Columns.equals("640"))
         +(Rows.equals("484") * Columns.equals("636"))
        )
       )

       // Vivid E9
       +(ManufacturerModelName.equals("Vivid E9")
        *((Rows.equals("759") * Columns.equals("1020"))
         +(Rows.equals("434") * Columns.equals("636"))
         +(Rows.equals("484") * Columns.equals("636"))
         +(Rows.equals("709") * Columns.equals("1020"))
        )
       )


       // Vivid E95
       +(ManufacturerModelName.equals("Vivid E95")
        *((Rows.equals("708") * Columns.equals("1016"))
        )
       )
       
       // Vivid 3
       +(ManufacturerModelName.equals("Vivid 3")
        *((Rows.equals("480") * Columns.equals("640"))
         +(Rows.equals("434") * Columns.equals("636"))
        )
       )
       
       // Voluson P
       +(ManufacturerModelName.equals("Voluson P")
        *((Rows.equals("600") * Columns.equals("800"))
        )
       )
       
       // Voluson S
       +(ManufacturerModelName.equals("Voluson S")
        *((Rows.equals("743") * Columns.equals("975"))
        )
       )

       // Voluson E8
       +(ManufacturerModelName.equals("Voluson E8")
        *((Rows.equals("852") * Columns.equals("1136"))
        )
       )

       // Vivid Q 
       +(ManufacturerModelName.equals("Vivid q")
        *((Rows.equals("422") * Columns.equals("636"))
         +(Rows.equals("434") * Columns.equals("636"))
        )
       )

       // LOGIQworksE9
       +(ManufacturerModelName.equals("LOGIQworksE9")
          // Resolution whitelists
          *(Rows.equals("434") * Columns.equals("532")) // No PHI found
       )

       // LOGIQe
       +(ManufacturerModelName.equals("LOGIQe")
          // Resolution whitelists
          *((Rows.equals("434") * Columns.equals("532")) // No PHI found
           +(Rows.equals("590") * Columns.equals("819"))
           +(Rows.equals("614") * Columns.equals("820"))
          )
       )

       // LOGIQi
       +(ManufacturerModelName.equals("LOGIQi")
          // Resolution whitelists
          *((Rows.equals("434") * Columns.equals("532")) // No PHI found
           +(Rows.equals("600") * Columns.equals("800"))
          )
       )

       // LOGIQE9
       +((ManufacturerModelName.equals("LOGIQE9") * !SoftwareVersion.contains("LOGIQe:"))
          // Resolution whitelists
          *(
            (Rows.equals("970") * Columns.equals("1552"))
           +(Rows.equals("873") * Columns.equals("1552"))
           +(Rows.equals("899") * Columns.equals("1442"))
           +(Rows.equals("819") * Columns.equals("1456"))
           +(Rows.equals("802") * Columns.equals("1442"))
           +(Rows.equals("748") * Columns.equals("1346"))
           +(Rows.equals("768") * Columns.equals("1280"))
           +(Rows.equals("720") * Columns.equals("1280"))
           +(Rows.equals("649") * Columns.equals("1170"))
           +(Rows.equals("873") * Columns.equals("1164"))
           +(Rows.equals("819") * Columns.equals("1092"))
           +(Rows.equals("802") * Columns.equals("1054"))
           +(Rows.equals("748") * Columns.equals("982"))
           +(Rows.equals("720") * Columns.equals("960"))
           +(Rows.equals("519") * Columns.equals("936"))
           +(Rows.equals("697") * Columns.equals("914"))
           +(Rows.equals("649") * Columns.equals("852"))
           +(Rows.equals("649") * Columns.equals("850"))
           +(Rows.equals("614") * Columns.equals("820"))
           +(Rows.equals("421") * Columns.equals("760"))
           +(Rows.equals("519") * Columns.equals("680"))
           +(Rows.equals("421") * Columns.equals("552"))
          )
       )


       // LOGICQS6
       +((ManufacturerModelName.equals("LOGIQ S6") +
         (ManufacturerModelName.equals("LOGIQ7") * SoftwareVersion.startsWith("LOGIQ S6")))
         // Resolution whitelists
         *((Rows.equals("434") * Columns.equals("532"))
          +(Rows.equals("768") * Columns.equals("1024"))
         )
        )

       // LOGICQS7
       +(ManufacturerModelName.equals("LOGIQS7")
         // Resolution whitelists
         *((Rows.equals("421") * Columns.equals("552"))
          +(Rows.equals("649") * Columns.equals("850"))
          +(Rows.equals("720") * Columns.equals("960"))
          +(Rows.equals("720") * Columns.equals("1280"))
         )
        )


       // LOGICQS8
       +(ManufacturerModelName.equals("LOGIQS8")
         // Resolution whitelists
         *((Rows.equals("421") * Columns.equals("552"))
          +(Rows.equals("600") * Columns.equals("600"))
          +(Rows.equals("649") * Columns.equals("850"))
          +(Rows.equals("720") * Columns.equals("960"))
          +(Rows.equals("819") * Columns.equals("1092"))
          +(Rows.equals("802") * Columns.equals("1054"))
          +(Rows.equals("873") * Columns.equals("1164"))
          +(Rows.equals("649") * Columns.equals("1170"))
          +(Rows.equals("720") * Columns.equals("1280"))
          +(Rows.equals("748") * Columns.equals("1346"))
          +(Rows.equals("802") * Columns.equals("1442"))
          +(Rows.equals("819") * Columns.equals("1456"))
          +(Rows.equals("873") * Columns.equals("1552"))
          +(Rows.equals("970") * Columns.equals("1552"))
         )
        )


       // LOGIQP5
       +(ManufacturerModelName.equals("LOGIQP5")
         // Resolution whitelists
         *((Rows.equals("434") * Columns.equals("532"))
          +(Rows.equals("614") * Columns.equals("816"))
         )
        )

       // LOGIQP6
       +(ManufacturerModelName.equals("LOGIQP6")
         // Resolution whitelists
         *((Rows.equals("434") * Columns.equals("532"))
          +(Rows.equals("614") * Columns.equals("816"))
         )
        )

       // LOGIQP9
       +(ManufacturerModelName.equals("LOGIQP9")
         // Resolution whitelists
         *((Rows.equals("856") * Columns.equals("1142"))
          +(Rows.equals("912") * Columns.equals("1216"))
         )
        )

       // LOGIQ5 (validated)
       +(ManufacturerModelName.equals("LOGIQ5")
          *Rows.equals("480") * Columns.equals("640")
       )

       // LOGICQ7
       +(ManufacturerModelName.equals("LOGIQ7")
        *(
          // Resolution whitelists
          (Rows.equals("434") * Columns.equals("532")) // No PHI found
         +(Rows.equals("480") * Columns.equals("640"))
         +(Rows.equals("768") * Columns.equals("1024"))
        )
       )

       // LOGICQ9
       +(ManufacturerModelName.equals("LOGIQ9")
        *(
          // Resolution whitelists
          (Rows.equals("434") * Columns.equals("532")) // No PHI found
         +(Rows.equals("480") * Columns.equals("640"))
         +(Rows.equals("697") * Columns.equals("854")) // No PHI found
         +(Rows.equals("697") * Columns.equals("856")) // No PHI found
         +(Rows.equals("600") * Columns.equals("800")) // PHI only in secondary
         +(Rows.equals("768") * Columns.equals("1024"))
        )
       )

       // LOGIQBook
       +(ManufacturerModelName.equals("LOGIQBook")
          // Resolution whitelists
          *(Rows.equals("434") * Columns.equals("532")) // No PHI found
       )

       // V830
       +(ManufacturerModelName.equals("V830")
          // Resolution whitelists
          *((Rows.equals("480") * Columns.equals("640"))
           +(Rows.equals("600") * Columns.equals("800")) 
           +(Rows.equals("650") * Columns.equals("868")) 
           +(Rows.equals("662") * Columns.equals("930")) 
           +(Rows.equals("720") * Columns.equals("960")) 
           +(Rows.equals("735") * Columns.equals("960")) 
           +(Rows.equals("735") * Columns.equals("975")) 
           +(Rows.equals("743") * Columns.equals("975")) 
           +(Rows.equals("682") * Columns.equals("1134")) 
           +(Rows.equals("852") * Columns.equals("1136")) 
          )
       )
              
       // EchoPAC (no PHI found)
       +(ManufacturerModelName.equals("EchoPAC PC")
          // Resolution whitelists
          *((Rows.equals("434") * Columns.equals("636"))           
           +(Rows.equals("850") * Columns.equals("1081")) 
          )
       )
                
       // End of GE models
        
       )
      )
    )
   )
)

//
// If not whitelisted above, then the image must pass the gauntlet below
//
+!(

  // Unsupported modalities (except above) using substring, as some manufacturers use "MG/PR" or "SR/US"
  Modality.containsIgnoreCase("MG")
  +Modality.containsIgnoreCase("MA")
  +Modality.containsIgnoreCase("RF")
  +Modality.containsIgnoreCase("US")
  +Modality.containsIgnoreCase("XA")

  // Unsupported modalities, exact match
  +Modality.equals("AN")
  +Modality.equals("AS")
  +Modality.equals("BD")
  +Modality.equals("BM")
  +Modality.equals("BMA")
  +Modality.equals("BMD")
  +Modality.equals("CF")
  +Modality.equals("CV")
  +Modality.equals("DE")
  +Modality.equals("DEXA")
  +Modality.equals("DF")
  +Modality.equals("DG")
  +Modality.equals("DMA")
  +Modality.equals("DOC")
  +Modality.equals("EC")
  +Modality.equals("ECG")
  +Modality.equals("ES")
  +Modality.equals("FILM_CT")
  +Modality.equals("FL")
  +Modality.equals("HC")
  +Modality.equals("HD")
  +Modality.equals("IO")
  +Modality.equals("IR")
  +Modality.equals("KO")
  +Modality.equals("PN")
  +Modality.equals("PR")
  +Modality.equals("RAW")
  +Modality.equals("REPORT")
  +Modality.equals("REQUEST")
  +Modality.equals("RG")
  +Modality.equals("RTDOSE")
  +Modality.equals("RTIMAGE")
  +Modality.equals("RTPLAN")
  +Modality.equals("RTSTRUCT")
  +Modality.equals("SC")
  +Modality.equals("SD")
  +Modality.equals("SPL")
  +Modality.equals("SR")
  +Modality.equals("ST")
  +Modality.equals("TG")
  +Modality.equals("UNQ")
  +Modality.equals("XD")  
  
  // Encapsulated PDF
  +[0008,0016].equals("1.2.840.10008.5.1.4.1.1.104.1") 

  // Conversion type is not empty
  +!ConversionType.equals("")
  
  // the DiCOM box has no ImageType and ComputedRadiographyImageStorage SOPClassUID 
  // So we can only go by the model name. These are video captures.
  +ManufacturerModelName.containsIgnoreCase("the DiCOM box")

  // No Vidar film scanners
  +Manufacturer.containsIgnoreCase("vidar")
  +ManufacturerModelName.containsIgnoreCase("vidar")
  
  // iCAD mammo scanners.. model name is blank so can't be more specific
  +Manufacturer.containsIgnoreCase("icad")
  
  // Presentation state and SR are omitted, for now
  +SOPClassUID.startsWith("1.2.840.10008.5.1.4.1.1.11.") // Soft-copy presentation states
  +SOPClassUID.startsWith("1.2.840.10008.5.1.4.1.1.8") // SR + KO

  // Bad-actor PACS which embed scanned documents as ImageType ORIGINAL and no other hints 
  // other than a high series number 
  +(Manufacturer.containsIgnoreCase("INFINITT") * SeriesNumber.matches("[1-9]\d{3,}"))

  // Biopsy/pathology are omitted for now
  +Manufacturer.containsIgnoreCase("Bioptics")
  +ManufacturerModelName.containsIgnoreCase("Biovision")
  +Manufacturer.containsIgnoreCase("Faxitron")
  +Manufacturer.containsIgnoreCase("KUBTEC")
  +(Manufacturer.containsIgnoreCase("Hologic") * ManufacturerModelName.containsIgnoreCase("Trident"))
  
  // 
  // Sorry, no DERIVED or SECONDARY or NULL Image Types. These must be whitelisted by device.
  // 
  +SOPClassUID.containsIgnoreCase("1.2.840.10008.5.1.4.1.1.7") // Secondary capture
  +ImageType.containsIgnoreCase("DERIVED") 
  +ImageType.containsIgnoreCase("SECONDARY") 
  +ImageType.equals("") 
  +BurnedInAnnotation.equalsIgnoreCase("YES")


)
